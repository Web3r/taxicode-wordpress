(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{429:function(o,t,e){"use strict";e.r(t);var n=e(410),i=e.n(n),s=e(409),a=e(39);const r={type:Object,required:!0,default:function(){return Object(a.f)("","",[0,0])}},p={geoJSONLocation:function(){return a.e.toCoords(this.location.position)},coordsLocation:function(){return a.d.toCoords(this.location.position)}};var c={props:{...{pickup:{type:Object,required:!0,default:function(){return Object(a.f)("London","",a.b)}},destination:{type:Object,required:!0,default:function(){return Object(a.f)("London Heathrow","TW6 1AP",a.a)}}}},computed:{...{...{geoJSONPickup:function(){return a.e.toCoords(this.pickup.position)},coordsPickup:function(){return a.d.toCoords(this.pickup.position)}},...{geoJSONDestination:function(){return a.e.toCoords(this.destination.position)},coordsDestination:function(){return a.d.toCoords(this.destination.position)}},center:function(){return a.d.centerOn(this.pickup.position,this.destination.position)},geoJSONCenter:function(){return a.e.centerOn(this.pickup.position,this.destination.position)},coordsCenter:function(){return a.d.toCoords(this.center)}}},methods:{...{wtf:function(){const o={pickup:this.pickup,dest:this.destination,center:this.center,geoJSONPickup:this.geoJSONPickup,geoJSONDestination:this.geoJSONDestination,geoJSONCenter:this.geoJSONCenter,coordsPickup:this.coordsPickup,coordsDest:this.coordsDestination,coordsCenter:this.coordsCenter,ha:a.d.centerOnCoords(this.pickup.position,this.destination.position),hmm:a.e.toGeoJSON(a.d.centerOnCoords(this.pickup.position,this.destination.position))};console.log("WTF",{...o})}}}};const l=["top","bottom","left","right","top-left","top-right","bottom-left","bottom-right"];var u={name:"JourneyLocationMapMarker",props:{location:r,locationTypeLabel:{type:String,default:"Location"},color:{type:String,default:"blue"},showPopup:{type:Boolean,default:!1},popupAnchor:{type:String,default:l[0],validator:o=>l.indexOf(o)>-1},debugging:{type:Boolean,default:!1}},computed:{...p},components:{"map-marker":s.c,"map-popup":s.d}},d=e(18),g=Object(d.a)(u,(function(){var o=this,t=o.$createElement,e=o._self._c||t;return e("map-marker",{attrs:{coordinates:o.geoJSONLocation,color:o.color}},[o.showPopup?e("map-popup",{attrs:{anchor:o.popupAnchor}},[o._t("popup-content",[e("div",[e("ul",{staticClass:"card list-group list-group-flush"},[e("li",{staticClass:"list-group-item d-flex"},[o._v("\n                        "+o._s(o.locationTypeLabel)+" : "+o._s(o.location)+"\n                    ")]),o._v(" "),e("li",{staticClass:"list-group-item d-flex"},[o._v("\n                        "+o._s(o.locationTypeLabel)+" Coords : "+o._s(o.coordsLocation)+"\n                    ")]),o._v(" "),e("li",{staticClass:"list-group-item d-flex"},[o._v("\n                        "+o._s(o.locationTypeLabel)+" GeoJSON : "+o._s(o.geoJSONLocation)+"\n                    ")])])])],{location:o.location,locationTypeLabel:o.locationTypeLabel,geoLocation:o.geoJSONLocation})],2):o._e()],1)}),[],!1,null,null,null).exports,h=e(17),m=e.n(h);const y=(o,t,e)=>`https://api.mapbox.com/directions/v5/mapbox/driving/${o.join(",")+";"+t.join(",")}?geometries=geojson&access_token=${e}`,f=async(o,t,e,n)=>{const i=y(o,t,e);n&&console.log("Mapbox API URL",i);const s=await m.a.get(i);return n&&console.log("Mapbox API Response",s),s.data.routes[0].geometry.coordinates},b={streets:"mapbox://styles/mapbox/streets-v11",night:"mapbox://styles/mapbox/navigation-night-v1",day:"mapbox://styles/mapbox/navigation-day-v1",custom:"mapbox://styles/taxicode-testing/cke2xdy4u1chp19n2abb4516w"};const _={mapboxPublicKey:{type:String,required:!0,default:""},mapboxStyle:{type:String,default:b.day},mapboxLayerId:{type:String,default:"mapLayer"},mapboxSourceId:{type:String,default:"mapSource"},pickupColor:{type:String,default:"green"},destinationColor:{type:String,default:"red"},routeColor:{type:String,default:"blue"},loadingJourney:{type:Boolean,default:!1},journeyError:{type:Boolean,default:!1},journeyLoaded:{type:Boolean,default:!0},debugging:{type:Boolean,default:!1}},S={name:"directionsError"};var O={name:"JourneyRouteMap",props:_,computed:{geoJSONLayerMapSource:function(){const o=this.geo_json.coords;return{type:"geojson",data:{id:this.mapboxSourceId,type:"Feature",properties:{},geometry:{type:"LineString",coordinates:o}}}},geoJSONLayerSource:function(){const o=this.geo_json.coords;return{...this.geo_json.layer,source:{type:"geojson",data:{id:`${this.mapboxSourceId}-${this.mapboxLayerId}`,type:"Feature",properties:{},geometry:{type:"LineString",coordinates:o}}}}}},methods:{calcRoute:async function(){void 0!==this.$refs.mpbx&&this.snapTo(this.$refs.mpbx.actions)},snapTo:async function(o){console.log("actions",o);const{fitBounds:t,zoomOut:e}=o;await t([this.geoJSONPickup,this.geoJSONDestination],{animate:!0}),await e()},onMapLoaded:async function(o){const t=this;console.log("load event",o),this.wtf(),this.map=o.map;try{this.geo_json.coords=await f(this.geoJSONPickup,this.geoJSONDestination,this.mapboxPublicKey,this.debugging),this.wtf()}catch(o){t.debugging&&(console.log("Mapbox API Error",{...o}),console.error(o),this.wtf()),t.$emit(S.name,o)}}},mixins:[c],components:{"route-map":s.b,"map-geo-json-layer":s.a,"map-popup":s.d,"location-map-marker":g},data(){const o=[a.e.toCoords(this.pickup.position),a.e.toCoords(this.destination.position)];return console.log("data",{...o}),{show_debug:!0,map_conf:{repaint:!1,controls:!1},map:null,style:this.mapboxStyle,geo_json:{conf:{active:!0,replace:!1,replace_source:!1},coords:[o],layer:{id:this.mapboxLayerId,type:"line",layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":this.routeColor,"line-width":4,"line-opacity":0}}}}},created(){this.mapbox=i.a,console.log("created"),this.wtf()},mounted(){console.log("mounted"),this.wtf()},updated(){console.log("updated"),this.journeyLoaded&&(console.log("updated journey loaded"),this.calcRoute())}},x=Object(d.a)(O,(function(){var o=this,t=o.$createElement,e=o._self._c||t;return e("route-map",{ref:"mpbx",attrs:{repaint:o.map_conf.repaint,"attribution-control":o.map_conf.controls,"access-token":o.mapboxPublicKey,"map-style":o.style,center:o.geoJSONCenter},on:{load:o.onMapLoaded}},[o.loadingJourney?o._e():e("location-map-marker",{attrs:{location:o.pickup,color:o.pickupColor,"show-popup":o.show_debug,debugging:o.debugging,"location-type-label":"Pickup","popup-anchor":"top"},scopedSlots:o._u([{key:"popup-content",fn:function(t){var n=t.location,i=t.locationTypeLabel;return[e("div",[e("ul",{staticClass:"card list-group list-group-flush"},[e("li",{staticClass:"list-group-item d-flex"},[o._v("\n                        "+o._s(i)+" : "+o._s(n.string)+"\n                    ")])])])]}}],null,!1,3487701519)}),o._v(" "),o.loadingJourney?o._e():e("location-map-marker",{attrs:{location:o.destination,color:o.destinationColor,"show-popup":o.show_debug,debugging:o.debugging,"location-type-label":"Destination","popup-anchor":"top"},scopedSlots:o._u([{key:"popup-content",fn:function(t){var n=t.location,i=t.locationTypeLabel;return[e("div",[e("ul",{staticClass:"card list-group list-group-flush"},[e("li",{staticClass:"list-group-item d-flex"},[o._v("\n                        "+o._s(i)+" : "+o._s(n.string)+"\n                    ")])])])]}}],null,!1,3487701519)}),o._v(" "),o.show_debug?e("map-popup",{attrs:{coordinates:o.geoJSONCenter}},[e("div",[e("ul",[e("li",[o._v("Center : "+o._s(o.center))]),o._v(" "),e("li",[o._v("Center GeoJSON : "+o._s(o.geoJSONCenter))]),o._v(" "),e("li",[o._v("Center Coords : "+o._s(o.coordsCenter))])])])]):o._e(),o._v(" "),o.geo_json.conf.active?e("map-geo-json-layer",{attrs:{"layer-id":o.mapboxLayerId,"source-id":o.mapboxSourceId,layer:o.geoJSONLayerSource,source:o.geoJSONLayerMapSource,replace:o.geo_json.conf.replace,"replace-source":o.geo_json.conf.replace_source}}):o._e()],1)}),[],!1,null,null,null);t.default=x.exports}}]);